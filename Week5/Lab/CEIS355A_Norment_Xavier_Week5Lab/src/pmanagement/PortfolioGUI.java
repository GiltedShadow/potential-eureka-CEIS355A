/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pmanagement;

import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Dictionary;
import java.util.Enumeration;
import java.util.Hashtable;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import pmanagement.Stock;

/**
 *
 * @author never
 * Program Name: CEIS355A_Norment_Xavier_Week5Lab.java
 * Programmer's Name: Xavier Norment
 * Program Description:
 *      maintains a stock list with available add, remove and view gain/loss
 */
public class PortfolioGUI extends javax.swing.JFrame {
    Dictionary<String, Double> stockDict = new Hashtable();
    private DefaultListModel<Stock> model;
    /**
     * Creates new form PortfolioGUI
     */
    public PortfolioGUI() {
        model = new DefaultListModel<Stock>();
        initComponents();
        //set loaction of gui to center screen
        this.setLocationRelativeTo(null);
        
        //fill in total value
        calculatePortValue();
        pullList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        tabbedPane = new javax.swing.JTabbedPane();
        tpneList = new javax.swing.JPanel();
        btnRemoveStock = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstStockList = new javax.swing.JList<>();
        lblGainLoss = new javax.swing.JLabel();
        lblTotalValue = new javax.swing.JLabel();
        tpneAddStock = new javax.swing.JPanel();
        lblStockName = new javax.swing.JLabel();
        lblQuantity = new javax.swing.JLabel();
        lblPurchasePrice = new javax.swing.JLabel();
        lblCurrentPrice = new javax.swing.JLabel();
        txtStockName = new javax.swing.JTextField();
        btnAddStock = new javax.swing.JButton();
        txtQuantity = new javax.swing.JFormattedTextField();
        txtPurchasePrice = new javax.swing.JFormattedTextField();
        txtCurrentPrice = new javax.swing.JFormattedTextField();
        mnuMain = new javax.swing.JMenuBar();
        miconFile = new javax.swing.JMenu();
        mitemOpen = new javax.swing.JMenuItem();
        mitemSave = new javax.swing.JMenuItem();
        mitemExit = new javax.swing.JMenuItem();

        jLabel1.setText("test01");

        jLabel2.setText("test");

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Portfolio Management");

        btnRemoveStock.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnRemoveStock.setText("Remove Stock");
        btnRemoveStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveStockActionPerformed(evt);
            }
        });

        lstStockList.setModel(model);
        lstStockList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstStockListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstStockList);

        lblGainLoss.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblGainLoss.setText("Gain/Loss");

        lblTotalValue.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTotalValue.setText("Total Value:");

        javax.swing.GroupLayout tpneListLayout = new javax.swing.GroupLayout(tpneList);
        tpneList.setLayout(tpneListLayout);
        tpneListLayout.setHorizontalGroup(
            tpneListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tpneListLayout.createSequentialGroup()
                .addGroup(tpneListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                    .addGroup(tpneListLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(tpneListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblGainLoss, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRemoveStock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTotalValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        tpneListLayout.setVerticalGroup(
            tpneListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tpneListLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblGainLoss)
                .addGap(18, 18, 18)
                .addComponent(btnRemoveStock)
                .addGap(18, 18, 18)
                .addComponent(lblTotalValue)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        tabbedPane.addTab("List", tpneList);

        lblStockName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblStockName.setText("Stock Name");

        lblQuantity.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblQuantity.setText("Quantity");

        lblPurchasePrice.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPurchasePrice.setText("Purchase Price");

        lblCurrentPrice.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCurrentPrice.setText("Current Price");

        txtStockName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnAddStock.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAddStock.setText("Add Stock");
        btnAddStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddStockActionPerformed(evt);
            }
        });

        txtQuantity.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        txtQuantity.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtQuantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtQuantityFocusLost(evt);
            }
        });

        txtPurchasePrice.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtPurchasePrice.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPurchasePrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPurchasePriceFocusLost(evt);
            }
        });

        txtCurrentPrice.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtCurrentPrice.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtCurrentPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCurrentPriceFocusLost(evt);
            }
        });

        javax.swing.GroupLayout tpneAddStockLayout = new javax.swing.GroupLayout(tpneAddStock);
        tpneAddStock.setLayout(tpneAddStockLayout);
        tpneAddStockLayout.setHorizontalGroup(
            tpneAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tpneAddStockLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tpneAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tpneAddStockLayout.createSequentialGroup()
                        .addComponent(lblStockName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                        .addComponent(txtStockName, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tpneAddStockLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAddStock, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tpneAddStockLayout.createSequentialGroup()
                        .addGroup(tpneAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPurchasePrice)
                            .addComponent(lblQuantity)
                            .addComponent(lblCurrentPrice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(tpneAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtQuantity)
                            .addComponent(txtPurchasePrice)
                            .addComponent(txtCurrentPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))))
                .addContainerGap())
        );
        tpneAddStockLayout.setVerticalGroup(
            tpneAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tpneAddStockLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tpneAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStockName)
                    .addComponent(txtStockName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tpneAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuantity)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tpneAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPurchasePrice)
                    .addComponent(txtPurchasePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tpneAddStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCurrentPrice)
                    .addComponent(txtCurrentPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddStock)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        tabbedPane.addTab("Add Stock", tpneAddStock);

        miconFile.setText("File");

        mitemOpen.setText("Open");
        mitemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitemOpenActionPerformed(evt);
            }
        });
        miconFile.add(mitemOpen);

        mitemSave.setText("Save");
        mitemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitemSaveActionPerformed(evt);
            }
        });
        miconFile.add(mitemSave);

        mitemExit.setText("Exit");
        mitemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitemExitActionPerformed(evt);
            }
        });
        miconFile.add(mitemExit);

        mnuMain.add(miconFile);

        setJMenuBar(mnuMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPane)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lstStockListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstStockListValueChanged
        // gain loss get
        var stockDictKey = lstStockList.getSelectedValue();
        if (stockDictKey == null){lblGainLoss.setText("Gain/Loss");return;}
        
        double currentStockValue = stockDictKey.getGainLoss();
        if (currentStockValue > 0){
            lblGainLoss.setText(String.format("Gain of %.2f", currentStockValue));
        }
        else if (currentStockValue < 0){
            currentStockValue = currentStockValue *-1;
            lblGainLoss.setText(String.format("Loss of %.2f", currentStockValue));
        }
        else{
            lblGainLoss.setText("Currently breaking even");
        }
    }//GEN-LAST:event_lstStockListValueChanged

    private void btnRemoveStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveStockActionPerformed
    // if none selected, error message
        var stockDictKey = lstStockList.getSelectedValue();
        if (stockDictKey == null){
            JOptionPane.showMessageDialog(rootPane, "Please select a stock from the list");
            return;
        }
        // remove stock selected
        int listPosition = lstStockList.getSelectedIndex();
        if (listPosition >= 0){
            model.remove(listPosition);
        }
        //calculate new portfolio value
        calculatePortValue();
    }//GEN-LAST:event_btnRemoveStockActionPerformed

    private void btnAddStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddStockActionPerformed
        // if not fully enetered, error messaget
        if (txtStockName.getText().equals("") || txtCurrentPrice.getText().equals("") || 
                txtQuantity.getText().equals("") || txtPurchasePrice.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Please enter a value for every blank", "Error. Missing Information", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // add stock from entered information
        Stock stk = new Stock(txtStockName.getText(), Double.parseDouble(txtQuantity.getText()), 
                Double.parseDouble(txtPurchasePrice.getText()), 
                Double.parseDouble(txtCurrentPrice.getText()));

        model.addElement(stk);
        JOptionPane.showMessageDialog(rootPane, "Stock added");
        
        //calculate new poertfolio value
        calculatePortValue();
        clearEntries();

    }//GEN-LAST:event_btnAddStockActionPerformed

    private void txtQuantityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantityFocusLost
        if (txtQuantity.getText().equals("")){
        incorrectEntryWarning();
        }
    }//GEN-LAST:event_txtQuantityFocusLost

    private void txtPurchasePriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPurchasePriceFocusLost
        if (txtPurchasePrice.getText().equals("")){
        incorrectEntryWarning();
        }
    }//GEN-LAST:event_txtPurchasePriceFocusLost

    private void txtCurrentPriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCurrentPriceFocusLost
        if (txtCurrentPrice.getText().equals("")){
        incorrectEntryWarning();
        }
    }//GEN-LAST:event_txtCurrentPriceFocusLost

    private void mitemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitemOpenActionPerformed
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(rootPane, "This is not implimented yet");
        //get file name
        String fileName = JOptionPane.showInputDialog("Enter file name: ");
        
        //get data from file
        StockIO readIn;
        if(fileName.equals("")){
            readIn = new StockIO(fileName);
        }
        else{
            readIn = new StockIO();
        }
        
        ArrayList<Stock> data = readIn.getData();
        
        //clear and recreate new model
        model.clear();
        for(int i=0;i<data.size();i++){
            Stock stk = data.get(i);
            model.addElement(stk);
        }
        calculatePortValue();

    }//GEN-LAST:event_mitemOpenActionPerformed

    private void mitemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitemSaveActionPerformed
        // TODO add your handling code here:
        String fileName = JOptionPane.showInputDialog("Enter file name: ");
        //JOptionPane.showMessageDialog(rootPane, "This is not implimented yet");
        //create writeOut, then if a file name is provided consruct appropriatly
        StockIO writeOut;
        if (fileName.equals("")){
            writeOut = new StockIO();
        }
        else{
            writeOut = new StockIO(fileName);
        }
        //create new arraylist, then add data to it
        ArrayList<Stock> data = new ArrayList<>();
        for (int i =0;i<model.size();i++){
            Stock stk = model.elementAt(i);
            data.add(stk);
        }
        writeOut.saveData(data);
        calculatePortValue();
        JOptionPane.showMessageDialog(rootPane, "List has been saved!");
    }//GEN-LAST:event_mitemSaveActionPerformed

    private void mitemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitemExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_mitemExitActionPerformed

    private void incorrectEntryWarning(){
        JOptionPane.showMessageDialog(rootPane, "Please only enter numerical values");
    }
    
    private void clearEntries(){
        txtStockName.setText("");
        txtQuantity.setText("");
        txtCurrentPrice.setText("");
        txtPurchasePrice.setText("");
    }
    
    private void pullList(){
        //DefaultListModel model = new DefaultListModel();
//        Enumeration<String> stockDictKeys = stockDict.keys();
//        while (stockDictKeys.hasMoreElements()){
//            String key = stockDictKeys.nextElement();
//            model.addElement(key);
//        }
        //lstStockList.setModel(model);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PortfolioGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PortfolioGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PortfolioGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PortfolioGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PortfolioGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddStock;
    private javax.swing.JButton btnRemoveStock;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCurrentPrice;
    private javax.swing.JLabel lblGainLoss;
    private javax.swing.JLabel lblPurchasePrice;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblStockName;
    private javax.swing.JLabel lblTotalValue;
    private javax.swing.JList<Stock> lstStockList;
    private javax.swing.JMenu miconFile;
    private javax.swing.JMenuItem mitemExit;
    private javax.swing.JMenuItem mitemOpen;
    private javax.swing.JMenuItem mitemSave;
    private javax.swing.JMenuBar mnuMain;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JPanel tpneAddStock;
    private javax.swing.JPanel tpneList;
    private javax.swing.JFormattedTextField txtCurrentPrice;
    private javax.swing.JFormattedTextField txtPurchasePrice;
    private javax.swing.JFormattedTextField txtQuantity;
    private javax.swing.JTextField txtStockName;
    // End of variables declaration//GEN-END:variables

    private void calculatePortValue() {
        double totalStockValue = 0.0;
        
        //add all Stock in the DefaultListModel model into the total value
        for (int i=0; i<model.size();i++){
            Stock stk = model.elementAt(i);
            totalStockValue += stk.getCurrentPrice() *stk.getNumberOfShares();
        }
        //format value to proper display
        DecimalFormat fmt = new DecimalFormat("$#,##0.00");
        lblTotalValue.setText("Total Value: "+ fmt.format(totalStockValue));
    }
}
